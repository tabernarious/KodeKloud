# Ansible adhoc commands are essential on-liner playbooks
# Also useful when you don't want to SSH directly to a host (or set of hosts) for data gathering, troubleshooting, or executing a quick command

# Example playbook
---
- name: "Ping Servers"
  hosts: all
  tasks:
    - ping:

# Execute playbook
ansible-playbook playbook.yml

# Same think as an adhoc command
# For "all" (group) hosts in "-i inventory" run "ping" module (-m)
ansible all -i inventory -m ping all

# Run a command for all hosts
ansible -a 'cat /etc/hosts' all

# Get facts for host1 and store in hosts.facts
ansible host1 -i inventory -m setup > host1.facts

# Flags
ansible --version
ansible -b (become super user, e.g. root using method sudo)
ansible -m [module] (select module)
ansible -a [arguments] (arguments for selected module)
ansible -f [#] (number of forks; see parallelism)

# More examples
ansible -m ping localhost
ansible host1 -i inventory -m ping
ansible host1 -i inventory -a "date"
ansible host1 -i inventory -b -m yum -a "name=httpd state=present"
ansible host1 -i inventory -b -m yum -a "name=httpd state=absent"
ansible host1 -i inventory -m file -a "path=/home/user/newfile state=touch"
ansible host1 -i inventory -m file -a "path=/home/user/newfile mode=0400"
ansible host1 -i inventory -b -m file -a "path=/home/user/newfile owner=root"
ansible host1 -i inventory -m copy -a "src=/home/user/localfile dest=/home/user/remotefile"
ansible host1 -i inventory -m copy -a "src=/var/tmp/remotefile dest=/home/user/remotefile remote_src=true"
ansible host1 -i inventory -b -m user -a "name=user"
ansible host1 -i inventory -b -m user -a "name=user groups=wheel" #replaces all groups with "wheel"
ansible host1 -i inventory -b -m user -a "name=user append=yes groups=admin" #adds group admin to existing groups

ansible dbsystems -b -m file -a "path=/home/consultant/.ssh mode=0755 state=directory"
ansible dbsystems -b -m copy -a "src=~/keys/consultant/authorized_keys dest=/home/consultant/.ssh/authorized_keys mode=0600 owner=consultant group=consultant"
ansible dbsystems -b -m file -a "path=/home/supervisor/.ssh mode=0755 state=directory"
ansible dbsystems -b -m copy -a "src=~/keys/supervisor/authorized_keys dest=/home/supervisor/.ssh/authorized_keys mode=0600 owner=supervisor group=supervisor"
ansible dbsystems -b -m yum -a "name=auditd state=present"
ansible dbsystems -b -m service -a "name=auditd state=started enabled=yes"

# Shell Script Example
#shell-script.sh
export ANSIBLE_GATHERING=explicit
ansible -m ping all
ansible -a 'cat /etc/hosts' all
ansible-playbook playbook.yml

sh shell-script.sh

chmod 755 shell-script.sh
./shell-script.sh

# Scripts Lab
#~/playbooks/host_details.sh
ansible all -a 'cat /etc/hostname' -i inventory
ansible node00 -m copy -a "src=/etc/resolv.conf dest=/tmp/resolve.conf" -i inventory

# Scripts Lab2
#~/playbooks/playbook.yml
---
- name: "Display /etc/redhat-release for all inventory"
  hosts: all
  tasks:
  - name: "cat /etc/redhat-release"
    command: cat /etc/redhat-release

#~/playbooks/host_data.sh
export ANSIBLE_GATHERING=explicit
ansible all -a 'uptime' -i inventory
ansible-playbook -i inventory -vv playbook.yml

